<% layout('./layouts/boilerplate.ejs')%>
<%- include('../../../layouts/partials/settings.ejs') %>
<style>

  .disliked{
    color: black;
  }
  .liked{
    color: red;
  }
  *, *::before, *::after {
  box-sizing: border-box;
}


.video-container {
  position: relative;
  /* width: 90%; */
  max-width: 1000px;
  display: flex;
  justify-content: center;
  margin-inline: auto;
  background-color: black;
}

.video-container.theater,
.video-container.full-screen {
  max-width: initial;
  width: 100%;
}

.video-container.theater {
  max-height: 90vh;
}

.video-container.full-screen {
  max-height: 100vh;
}

video {
  width: 100%;
}

.video-controls-container {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  color: white;
  z-index: 100;
  opacity: 0;
  transition: opacity 150ms ease-in-out;
}

.video-controls-container::before {
  /* content: "";
  position: absolute;
  bottom: 0;
  background: linear-gradient(to top, rgba(0, 0, 0, .75), transparent);
  width: 100%;
  aspect-ratio: 6 / 1;
  z-index: -1;
  pointer-events: none; */
}

.video-container:hover .video-controls-container,
.video-container:focus-within .video-controls-container,
.video-container.paused .video-controls-container {
  opacity: 1;
}

.video-controls-container .controls {
  display: flex;
  gap: .5rem;
  padding: .25rem;
  align-items: center;
}

.video-controls-container .controls button {
  background: none;
  border: none;
  color: inherit;
  padding: 0;
  height: 30px;
  width: 30px;
  font-size: 1.1rem;
  cursor: pointer;
  opacity: .85;
  transition: opacity 150ms ease-in-out;
}

.video-controls-container .controls button:hover {
  opacity: 1;
}

.video-container.paused .pause-icon {
  display: none;
}

.video-container:not(.paused) .play-icon {
  display: none;
}

.video-container.theater .tall {
  display: none;
}

.video-container:not(.theater) .wide {
  display: none;
}

.video-container.full-screen .open {
  display: none;
}

.video-container:not(.full-screen) .close {
  display: none;
}

.volume-high-icon,
.volume-low-icon,
.volume-muted-icon {
  display: none;
}

.video-container[data-volume-level="high"] .volume-high-icon {
  display: block;
}

.video-container[data-volume-level="low"] .volume-low-icon {
  display: block;
}

.video-container[data-volume-level="muted"] .volume-muted-icon {
  display: block;
}

.volume-container {
  display: flex;
  align-items: center;
}

.volume-slider {
  width: 0;
  transform-origin: left;
  transform: scaleX(0);
  transition: width 150ms ease-in-out, transform 150ms ease-in-out;
}

.volume-container:hover .volume-slider,
.volume-slider:focus-within {
  width: 100px;
  transform: scaleX(1);
}

.duration-container {
  display: flex;
  align-items: center;
  gap: .25rem;
  flex-grow: 1;
}

.video-container.captions .captions-btn {
  border-bottom: 3px solid #f54251;
}

.video-controls-container .controls button.wide-btn {
  width: 50px;
}

.timeline-container {
  height: 7px;
  margin-inline: .5rem;
  cursor: pointer;
  display: flex;
  align-items: center;
}

.timeline {
  background-color: rgba(100, 100, 100, .5);
  height: 3px;
  width: 100%;
  position: relative
}

.timeline::before {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: calc(100% - var(--preview-position) * 100%);
  background-color: rgb(150, 150, 150);
  display: none;
}

.timeline::after {
  content: "";
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: calc(100% - var(--progress-position) * 100%);
  background-color: red;
}

.timeline .thumb-indicator {
  --scale: 0;
  position: absolute;
  transform: translateX(-50%) scale(var(--scale));
  height: 200%;
  top: -50%;
  left: calc(var(--progress-position) * 100%);
  background-color: red;
  border-radius: 50%;
  transition: transform 150ms ease-in-out;
  aspect-ratio: 1 / 1;
}

.timeline .preview-img {
  position: absolute;
  height: 80px;
  aspect-ratio: 16 / 9;
  top: -1rem;
  transform: translate(-50%, -100%);
  left: calc(var(--preview-position) * 100%);
  border-radius: .25rem;
  border: 2px solid white;
  display: none;
}

.thumbnail-img {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  display: none;
}

.video-container.scrubbing .thumbnail-img {
  display: block;
}

.video-container.scrubbing .preview-img,
.timeline-container:hover .preview-img {
  display: block;
}

.video-container.scrubbing .timeline::before,
.timeline-container:hover .timeline::before {
  display: block;
}

.video-container.scrubbing .thumb-indicator,
.timeline-container:hover .thumb-indicator {
  --scale: 1;
}

.video-container.scrubbing .timeline,
.timeline-container:hover .timeline {
  height: 100%;
}
.video-card {
        width: 100%;
    }
    .videoElement{
      width: 50em;
    }
   
    .liked{
        color: black;
    }
    .reco2{
      display: flex;
      
    }
    .sugest{
      width: 30%;
    }
    .videow{
      width: 70%;
    }
    @media screen and (max-width: 858px) {
        .video-card {
            width: 100%;
        }
        .sugest{
          width: 100%;
        }
        .centers {
           flex-direction: column;
        }
        .comments-reco{
            width: 100%;
        }
        .reco2{
          display: flex;
          flex-direction: column;
        }
        .videow{
          width: 100%;
        }

        
    }
    .gradient-icon {
    background: linear-gradient(45deg, #ff0000, #00ff00);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
    .disliked{
        color: black;
    }
    .bg-opacity-50{
      display: none;
    }
    .theathorfull{
  display: block;
}
.fullwidth{
  width: 100%;
}
</style>
<title>
  <%= uplaod.title  %>
</title>
<% const timeDifference = Date.now() - uplaod.createdAt.getTime();
let formattedDate = '';

// Calculate the difference in milliseconds
const minuteInMs = 60 * 1000;
const hourInMs = 60 * minuteInMs;
const dayInMs = 24 * hourInMs;
const weekInMs = 7 * dayInMs;

// Format the date based on the time difference
if (timeDifference < minuteInMs) {
  formattedDate = Math.floor(timeDifference / 1000) + ' seconds ago';
} else if (timeDifference < hourInMs) {
  formattedDate = Math.floor(timeDifference / minuteInMs) + ' minutes ago';
} else if (timeDifference < dayInMs) {
  formattedDate = Math.floor(timeDifference / hourInMs) + ' hours ago';
} else if (timeDifference < weekInMs) {
  formattedDate = Math.floor(timeDifference / dayInMs) + ' days ago';
} else {
  formattedDate = uplaod.createdAt.toDateString(); // Use the full date if it's more than a week ago
} %>



<div class=" fullscreen border" id="content-menu" style="overflow: scroll; height: 100vh;">
  <div class="reco2 ">
    <div class="centers videow flex flex-col" >

    <div class="video-card" >
      <div class="flex  w-full flex justify-center " style="min-height:27em; ">
        <div class="video-container paused" data-volume-level="high">
          <img class="thumbnail-img">
          <div class="video-controls-container">
            <div class="timeline-container">
              <div class="timeline">
                <img class="preview-img">
                <div class="thumb-indicator"></div>
              </div>
            </div>
            <div class="controls">
              <button class="play-pause-btn">
                <svg class="play-icon" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M8,5.14V19.14L19,12.14L8,5.14Z" />
                </svg>
                <svg class="pause-icon" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M14,19H18V5H14M6,19H10V5H6V19Z" />
                </svg>
              </button>
              <div class="volume-container">
                <button class="mute-btn">
                  <svg class="volume-high-icon" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M14,3.23V5.29C16.89,6.15 19,8.83 19,12C19,15.17 16.89,17.84 14,18.7V20.77C18,19.86 21,16.28 21,12C21,7.72 18,4.14 14,3.23M16.5,12C16.5,10.23 15.5,8.71 14,7.97V16C15.5,15.29 16.5,13.76 16.5,12M3,9V15H7L12,20V4L7,9H3Z" />
                  </svg>
                  <svg class="volume-low-icon" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M5,9V15H9L14,20V4L9,9M18.5,12C18.5,10.23 17.5,8.71 16,7.97V16C17.5,15.29 18.5,13.76 18.5,12Z" />
                  </svg>
                  <svg class="volume-muted-icon" viewBox="0 0 24 24">
                    <path fill="currentColor" d="M12,4L9.91,6.09L12,8.18M4.27,3L3,4.27L7.73,9H3V15H7L12,20V13.27L16.25,17.53C15.58,18.04 14.83,18.46 14,18.7V20.77C15.38,20.45 16.63,19.82 17.68,18.96L19.73,21L21,19.73L12,10.73M19,12C19,12.94 18.8,13.82 18.46,14.64L19.97,16.15C20.62,14.91 21,13.5 21,12C21,7.72 18,4.14 14,3.23V5.29C16.89,6.15 19,8.83 19,12M16.5,12C16.5,10.23 15.5,8.71 14,7.97V10.18L16.45,12.63C16.5,12.43 16.5,12.21 16.5,12Z" />
                  </svg>
                </button>
                <input class="volume-slider" type="range" min="0" max="1" step="any" value="1">
              </div>
              <div class="duration-container">
                <div class="current-time">0:00</div>
                /
                <div class="total-time"></div>
              </div>
              <button class="captions-btn">
                <svg viewBox="0 0 24 24">
                  <path fill="currentColor" d="M18,11H16.5V10.5H14.5V13.5H16.5V13H18V14A1,1 0 0,1 17,15H14A1,1 0 0,1 13,14V10A1,1 0 0,1 14,9H17A1,1 0 0,1 18,10M11,11H9.5V10.5H7.5V13.5H9.5V13H11V14A1,1 0 0,1 10,15H7A1,1 0 0,1 6,14V10A1,1 0 0,1 7,9H10A1,1 0 0,1 11,10M19,4H5C3.89,4 3,4.89 3,6V18A2,2 0 0,0 5,20H19A2,2 0 0,0 21,18V6C21,4.89 20.1,4 19,4Z" />
                </svg>
              </button>
              <button class="speed-btn wide-btn">
                1x
              </button>
              <button class="mini-player-btn">
                <svg viewBox="0 0 24 24">
                  <path fill="currentColor" d="M21 3H3c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h18c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H3V5h18v14zm-10-7h9v6h-9z"/>
                </svg>
              </button>
              <button class="theater-btn">
                <svg class="tall" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M19 6H5c-1.1 0-2 .9-2 2v8c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 10H5V8h14v8z"/>
                </svg>
                <svg class="wide" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M19 7H5c-1.1 0-2 .9-2 2v6c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9c0-1.1-.9-2-2-2zm0 8H5V9h14v6z"/>
                </svg>
              </button>
              <button class="full-screen-btn">
                <svg class="open" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M7 14H5v5h5v-2H7v-3zm-2-4h2V7h3V5H5v5zm12 7h-3v2h5v-5h-2v3zM14 5v2h3v3h2V5h-5z"/>
                </svg>
                <svg class="close" viewBox="0 0 24 24">
                  <path fill="currentColor" d="M5 16h3v3h2v-5H5v2zm3-8H5v2h5V5H8v3zm6 11h2v-3h3v-2h-5v5zm2-11V5h-2v5h5V8h-3z"/>
                </svg>
              </button>
            </div>
          </div>
          <video class="karivideo" src="<%= uplaod.VideoUrl %>" >
            <track kind="captions" srclang="en" src="assets/subtitles.vtt">

          </video>
        </div>

    </div>
    <div class="p-3">
      <div id="timestampDisplay"></div>
          <span>
            <h1 class="text-xl font-medium  "><%= uplaod.title %></h1>
          </span>
          <div class="cotegory flex align-center justify-between">
            <span class="cotegory">
              
              <i class="bi bi-globe gradient-icon"></i>
              

                <b class="text-sm"><%=uplaod.category %></b>
            </span>
            <span class="stats flex ">
                <div class="views mr-14 text-gray-600 flex">
                    <div class="">
                    <i class="bi text-red-700 text-xl bi-eye-fill"></i>
                    <%= uplaod.viewcount %> views. <%= formattedDate %>


                </div>
                </div>
                <div class="flex content-center">
                    <div class="like mr-3">
                      <% if(currentUser){ %>
                      <%
                         let dislikefill =''
                         if(uplaod.dislikes.includes(currentUser._id)){
                            dislikefill = 'bi-hand-thumbs-down-fill'
                         }else{
                            dislikefill = 'bi-hand-thumbs-down'
                          }
                          %>
                      <% } %>

                      <% let likefill1 = uplaod.likes.includes(currentUser._id) ? 'bi-hand-thumbs-up-fill' : 'bi-hand-thumbs-up'; %>
                      <% let dislikefill1 = uplaod.dislikes.includes(currentUser._id) ? 'bi-hand-thumbs-down-fill' : 'bi-hand-thumbs-down'; %>

                        <button class="likebtn ">
                          
                          <i class="bi mr-1 text-gray-500 <%=likefill1 %> text-xl "></i>
                        </button>  
                        <span class="likes">
                          <%= uplaod.likes.length %>
                        </span>
                      </div>
                      
                      <div class="dislike">
                        <button class="dislikebtn" data-video-id="<%= uplaod._id %>">
                          <i class="bi mr-1 text-gray-500 text-xl <%=dislikefill1 %> "></i>
                        </button>  
                        <span class="dislikes"> 
                          <%= uplaod.dislikes.length %>
                        </span>
                      </div>
                  </div>
            </span>
          </div>
          <div class="mt-3"> 
            <div class="flex justify-between"> 
          <div class="user flex">
            <img class="user-img rounded-full mt-1 w-10 h-10" src="<%= uplaod.author[0].photourl%>" alt="" srcset="">
            <div class="user-name ml-2 flex flex-col mb-2">
              <span class="font-medium text-xl"><%= uplaod.author[0].username%></span>
              <span class="text-gray-700 text-sm mb-1">21.3M Subscribes</span>
            </div>
          </div>
          <div class="sub">
            <div class="flex items-center">
              <% if(uplaod.quizCard ){ %>
                <a href="/home/quiz/<%= uplaod.quizCard[0]._id %>" class="mr-3">
                    <i class="bi   text-gray-500 text-2xl  bi-tv"></i>
                </a>
              <% } %>
           
                <button>
                    <i class="bi text-gray-500 text-2xl bi-bookmark-plus "></i>
                </button>
                <button class="ml-3"> 
                    <i class="bi text-gray-500 text-2xl   bi-link"></i>
                </button>
            
                <button class="p-3 ml-2 bg-blue-600 text-white rounded-3xl">Subscribe</button>
                <% if(currentUser){ %>
                <% if(uplaod.author[0]._id.equals(currentUser._id)){ %>
                <a href="/home/video/<%= uplaod._id %>/edit" class="p-3 ml-2 bg-blue-600 text-white rounded-3xl">Edit</a>
                  <% } %>
                  <% } %>
            </div>
          </div>
        </div>
        </div>

        </div>

    </div>
    <div class="flex ml-1 flex-col">
    <div class="description bg-gray-200 rounded-lg p-3 mt-2" >
      <span class="text-gray-700 text-sm">
          <div class="flex">
          <b><%= uplaod.createdAt.toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric' }) %>                </b>
          <% for(let tag of uplaod.tags){ %>
              <span class="text-blue-500 ml-1">#<%= tag %> </span>
          <% } %>
      </div>
   

          <%= uplaod.description %>   
      </span>
  </div>
    <br>
    <div class="comments-reco ml-2 flex flex-col" >
        <div class="comments-card  p-2 background  " style="width: 100%; height: auto;">
         
        <br>
            <div class="flex">

              <span><%= uplaod.comments.length%> comments</span>
              <span class="ml-auto">View all</span>
            </div>
            <div class="add-comment " >
              <div id="replymsgd" class="replydisplay bg-blue-200 rounded p-1 hidden">
                  <span id="replymsg">slsl</span>
  
              </div>
              <form id="newcomments" action="/video/<%=uplaod._id %>/comments"   method="POST">
                <div class="w-full">
                  <div class="flex items-center rounded-lg">
                <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                  <img class="w-12 h-12 rounded-full" src="<%=currentUser.photourl%>" alt="user photo">
  
                </button>
               
                <textarea id="chat" name="comment" rows="1" class="block  p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" placeholder="Your message..."></textarea>
                
              </div>
              <div class="flex w-full  justify-between">
                <button type="submit" class=" text-white justify-center p-2 rounded-full cursor-pointer hover:bg-blue-100  dark:hover:bg-gray-600" style="margin-left: 3em;">
                  <i class="bi text-gray-700 text-2xl bi-emoji-laughing-fill"></i>
  
                 </button>
                 <div>
  
             
                 <button type="submit" class="   text-whidte justify-center p-2 rounded-full cursor-pointer">
                  <span>Cancel</span>
                 </button>
                <button type="submit" class=" bg-blue-500  text-white justify-center p-2 rounded-full cursor-pointer hover:bg-blue-100  dark:hover:bg-gray-600">
                 <span>Send</span>
                </button>
              </div>
              </div>
            </div>
            </form>
          </div>
               

            <div class="comments p-3" style="height: auto; overflow: scroll;">
              <% for(let comment of uplaod.comments){ %>
                <div class="flex items-start w-full mb-2 align-center" id="livecommetn-<%= comment._id%>-<%= comment.user[0]._id %>">
                  <div>
                    <div class="like mr-1 bg-gray-200 p-2 rounded" style="position: relative; height: 5em; display: flex; justify-content: center; align-items: center;">
                      <div class="flex text-center items-center flex-col">
                        <% if(currentUser){ %>
                        <% let likefill = comment.likes.includes(currentUser._id) ? 'bi-caret-up-fill' : 'bi-caret-up'; %>
                        <button id="likebtn<%= comment._id %>" class="like-commets <%= likefill %>" onclick="likeComment('<%= comment._id %>')"></button>
                        <% }else{ %>
                          <button class="like-commets bi-caret-up" onclick="likeComment('<%= comment._id %>')"></button>
                        <% } %>
                        <% 
                        let likes = comment.likes.length;
                        let dislikes = comment.dislikes.length;
                        let avrage = likes - dislikes;
                        %>
                        <span class="like-dislike-count" id="<%= comment._id %>"><%= avrage %></span>
                        <% if(currentUser){ %>
                        <% let dislikefill = comment.dislikes.includes(currentUser._id) ? 'bi-caret-down-fill' : 'bi-caret-down'; %>
                        <button id="dislikebtn<%= comment._id %>" class="dislike-commets <%= dislikefill %>" onclick="dislikeComment('<%= comment._id %>')"></button>
                        <% }else{ %>
                          <button class="dislike-commets bi-caret-down" onclick="dislikeComment('<%= comment._id %>')"></button>
                        <% } %>
                      </div>
                    </div>
                  </div>
                  <div class="comment w-full mb-3 flex">
                    <% if(!comment.user[0].photourl || comment.user[0].photourl === '') { %>
                      <div class="user-img rounded-full bg-blue-200 w-11 h-11 text-center flex justify-center" src="https://yt3.ggpht.com/ytc/AOPolaSHoC37xAqzya3OaA1wyAKEqd9623gkoy6D5oMylA=s88-c-k-c0x00ffffff-no-rj" alt="" srcset="">
                        <span  class="mt-1 font-medium text-md"><%= comment.user[0].username.substring(0, 1) %></span>
                      </div>
                    <% } else { %>
                      <img class="user-img rounded-full w-11 h-11" src="<%= comment.user[0].photourl %>" alt="" srcset="">
                    <% } %>
                    <div class="comment-text ml-1" style="width: 98%;">
                      <div class="flex w-full justify-between">
                        <% const commentDate = new Date(comment.createdAt);
                        const currentDate = new Date();
                        const timeDiff = Math.abs(currentDate - commentDate);
                        const minutes = Math.floor(timeDiff / (1000 * 60));
                        const hours = Math.floor(timeDiff / (1000 * 60 * 60));
                        const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                        const months = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 30));
                        const years = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 365));
                        let formattedDate;
                        if (minutes < 60) {
                          formattedDate = minutes + ' minutes ago';
                        } else if (hours < 24) {
                          formattedDate = hours + ' hours ago';
                        } else if (days < 30) {
                          formattedDate = days + ' days ago';
                        } else if (months < 12) {
                          formattedDate = months + ' months ago';
                        } else {
                          formattedDate = years + ' years ago';
                        }
                        %>
                        <span class="text-sm">@<%= comment.user[0].username %> <span class="text-gray-500 text-md"><%= formattedDate %></span></span>
                        <button  data-modal-target="more<%= comment.content%>popup" data-modal-toggle="more<%= comment.content%>popup"><i class="bi bi-three-dots ml-2"></i></button>
                          <!-- Dropdown menu -->

                      </div>
                      <div class="flex justify-end">
                        <div id="more<%= comment.content%>popup" id="dropdownDelay" class="z-10 hidden absolute bg-white divide-y divide-gray-100 rounded-lg shadow w-16 ">
                          <ul class="py-2 text-sm text-gray-700 " aria-labelledby="dropdownDelayButton">
                            <% if(currentUser){ %>
                            <% if (comment.user[0]._id.equals(currentUser._id)) { %>
                              <li>
                              <button  data-modal-hide="more<%= comment.user[0]._id%>popup"  data-modal-target="edit<%= comment.user[0]._id%>popup"  data-modal-toggle="edit<%= comment.user[0]._id%>popup" class="block w-full px-4 py-2 hover:bg-gray-100 ">Edit</button>
                            </li>
                            <li>
                              <button href="#"  data-modal-hide="more<%= comment.user[0]._id%>popup" onclick="Deletecommets('<%= uplaod._id%>','<%=comment._id%>','<%= comment.user[0]._id%>')" class="block px-4 py-2 hover:bg-gray-100 ">Delete</button>
                            </li>
                            <% } else{ %>
                            <li>
                              <a href="#"  class="block px-4 py-2 hover:bg-gray-100 ">Report</a>
                            </li>
                            <% } %>
                            <% } %>
                          </ul>
                        </div>
                        
                      </div>
                  
                      <span id="comment-<%=comment._id %>" class="text-gray-700 text-lg"><%= comment.content %></span><br>
                      <% if (comment.replies && comment.replies.length> 0) { %>

                  <button  data-modal-target="replying-<%=comment.replies[0]._id%>Modal" data-modal-toggle="replying-<%=comment.replies[0]._id%>Modal"><i class="bi bi-chevron-down"></i>
                    <%=comment.replies.length%> replies</button>
              
                  <div class="flex replies-class hidden  " id="replying-<%=comment.replies[0]._id%>Modal"  data-modal-backdrop="static" > 
                    <div class="flex replymodel-<%=comment._id %> flex-col w-full" >
              <% for(let replies of comment.replies){%>
                <div class="flex mb-1 " id="livereply-<%=replies._id %>-<%= replies.user[0]._id%>">
                  <div class="like mr-1 bg-gray-200 p-1 rounded" style="height: 3.3em;">
                    <div class="flex text-center items-center flex-col" style="font-size: 0.5em;">
                      <% let likes = replies.likes.length;
                       let dislikes = replies.dislikes.length; 
                       let avrage = likes - dislikes;
                       const commentDate1 = new Date(replies.createdAt);
                            const currentDate1 = new Date();
                            const timeDiff1 = Math.abs(currentDate1 - commentDate1);
                            const minutes1 = Math.floor(timeDiff1 / (1000 * 60));
                            const hours1 = Math.floor(timeDiff1 / (1000 * 60 * 60));
                            const days1 = Math.floor(timeDiff1 / (1000 * 60 * 60 * 24));
                            const months1 = Math.floor(timeDiff1 / (1000 * 60 * 60 * 24 * 30));
                            const years1 = Math.floor(timeDiff1 / (1000 * 60 * 60 * 24 * 365));
                            let formattedDate1;
                            if (minutes1 < 60) {
                              formattedDate1 = minutes1 + ' minutes ago';
                            } else if (hours1 < 24) {
                              formattedDate1 = hours1 + ' hours ago';
                            } else if (days1 < 30) {
                              formattedDate1 = days1 + ' days ago';
                            } else if (months1 < 12) {
                              formattedDate1 = months1 + ' months ago';
                            } else {
                              formattedDate1 = years1 + ' years ago';
                            }

                        %>
                        <% if(currentUser){ %>
                          <%                             let likefill = replies.likes.includes(currentUser._id) ? 'bi-caret-up-fill' : 'bi-caret-up';
                          let dislikefill = replies.dislikes.includes(currentUser._id) ? 'bi-caret-down-fill' : 'bi-caret-down'; %>
                        
                        <button id="likebtn<%= replies._id %>" class="like-reply <%= likefill %>" onclick="likeReply('<%= comment._id %>', '<%= replies._id %>')"></button>

                      <span class="avrage" id="<%= replies._id %>"><%=avrage %></span>
                      <button id="dislikebtn<%= replies._id %>" class="dislike-reply <%= dislikefill %>" onclick="dislikeReply('<%= comment._id %>', '<%= replies._id %>')"></button>
                        <% }else{ %>

                          <button id="likebtn<%= replies._id %>" class="like-reply bi-caret-up " onclick="likeReply('<%= comment._id %>', '<%= replies._id %>')"></button>

                      <span class="avrage" id="<%= replies._id %>"><%=avrage %></span>
                      <button id="dislikebtn<%= replies._id %>" class="dislike-reply bi-caret-down" onclick="dislikeReply('<%= comment._id %>', '<%= replies._id %>')"></button>
                        <% } %>
                    </div>
                </div>
                   <div class="p-2 rereply w-full">
                <div class="flex justify-between w-full">
                  <div class="flex">
                  <% if(!comment.user[0].photourl && comment.user[0].photourl == '') { %>
                <div class="user-img rounded-full bg-red-200 w-8 h-8 text-center flex justify-center" src="https://yt3.ggpht.com/ytc/AOPolaSHoC37xAqzya3OaA1wyAKEqd9623gkoy6D5oMylA=s88-c-k-c0x00ffffff-no-rj" alt="" srcset=""> <span class="mt-2 font-medium text-md"> <%= replies.user[0].username %></span></div>
                <%} else{%>
                    <img class="user-img rounded-full w-7 h-7" src="<%= replies.user[0].photourl %>" alt="" srcset="">
                    <% } %>
               <span class="ml-1 text-sm">@<%= replies.user[0].username %> <span class="text-gray-500 text-xs"><%=formattedDate1 %> </span>
          
                     </span>
                </div>
                <span>  
                  <button  data-modal-target="re-more<%= replies.content%>popup" data-modal-toggle="re-more<%= replies.content%>popup"><i class="bi bi-three-dots ml-2"></i></button>            
                    </span>
                    <div class="" style="
    width: 55%;
    margin-top: 1em;
    position: absolute;
    display: flex;
    justify-content: flex-end;">
                      <div id="re-more<%= replies.content%>popup" id="dropdownDelay" class="z-10 hidden absolute bg-white divide-y divide-gray-100 rounded-lg shadow w-16 ">
                        <ul class="py-2 text-sm text-gray-700 " aria-labelledby="dropdownDelayButton">
                          <% if(currentUser){ %>
                          <% if (comment.user[0]._id.equals(currentUser._id)) { %>
                            <li>
                            <button  data-modal-hide="re-more<%= replies.content%>popup"  data-modal-target="re-reply<%= replies.content%>edit"  data-modal-toggle="re-reply<%= replies.content%>edit" class="block px-4 py-2 hover:bg-gray-100 ">Edit</button>
                          </li>
                          <li>
                            <button  href="#" data-modal-hide="re-more<%= comment.user[0]._id%>popup" onclick="Deletereply('<%= uplaod._id%>','<%=comment._id%>' ,'<%= replies._id%>' ,'<%= replies.user[0]._id%>')" class="block px-4 py-2 hover:bg-gray-100 ">Delete</button>
                          </li>
                          <% } else{ %>
                          <li>
                            <a href="#"  class="block px-4 py-2 hover:bg-gray-100 ">Report</a>
                          </li>
                          <% } %>
                          <% } %>
                        </ul>
                      </div>
                    </div>

              </div>
              <div>
                <% if (replies.targetuser ) { %>
                  <span   class=" text-white text-xs p-1 rounded border-0 bg-blue-900"><%= replies.targetuser[0].username %></span> <span id="repyied-<%=replies._id %>" > <%= replies.content %></span> 
                  <% }else{%>

              <span id="repyied-<%=replies._id %>" class="text-xs text-gray-600"><%= replies.content %></span>
            <% } %>

              </div>
              <div class="reply-reply">
                <button  data-modal-target="<%=replies._id %>ReplayreplyModal" data-modal-toggle="<%=replies._id %>ReplayreplyModal"  class="replsy-btn text-xs" >
                      Reply</button>
                    <!-- //re reEdit -->
                      <div style="margin-left: -3em;" class="kd w-full hidden " id="re-reply<%= replies.content%>edit" >
                        <div class="flex flex-col">
    
                        <span> Editing to  <b class="text-red-700"> <%=replies.user[0].username %></b></span>
    <form id="re-replyeditform" action="/video/<%=uplaod._id %>/comments/<%=comment._id %>/replies/<%=replies._id %>/edit" data-comment-id="<%=replies._id %>" method="post">
                          <div class="flex items-center  p-1 border rounded-lg bg-gray-50">
    
                        <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                            <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 1H2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1Z"/>
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                          </svg>
                          <span class="sr-only">Upload image</span>
                        </button>
                       
                        <textarea id="chat" name="comment" rows="1" class="block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" placeholder=""><%=replies.content %></textarea>
                        <button type="submit" class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                          <svg class="w-5 h-5 rotate-90" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                            <path d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z"/>
                          </svg>
                          <span class="sr-only">Send message</span>
                        </button>
                      </div>
                    </div>
    
                    </form>
    
                      </div>
                      <!-- /Edit -->
                      <div style="margin-left: -3em;" class="kd w-full hidden " id="<%=replies._id %>ReplayreplyModal" >
                        <div class="flex flex-col">
    
                        <span>re Replying to  <b class="text-red-700"> <%=replies.user[0]._id %></b></span>
    <form id="replyform" action="/video/<%=uplaod._id %>/comments/<%=comment._id %>/replies/<%=replies.user[0]._id %>" data-comment-id="<%=comment._id %>" method="post">
                          <div class="flex items-center  p-1 border rounded-lg bg-gray-50">
    
                        <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                          <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                            <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 1H2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1Z"/>
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                          </svg>
                          <span class="sr-only">Upload image</span>
                        </button>
                       
                        <textarea id="chat" name="comment" rows="1" class="block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" placeholder="Your message..."></textarea>
                        <button type="submit" class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                          <svg class="w-5 h-5 rotate-90" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                            <path d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z"/>
                          </svg>
                          <span class="sr-only">Send message</span>
                        </button>
                      </div>
                    </div>
    
                    </form>
    
                      </div>
                    
              </div>

              </div>


                </div>
              <% } %>
          
                  </div>
                  

                   
                  </div>
                  <% } %>

                  <div class="flex justify-between w-full" style="    width: 100%;
                  margin-left: -2em;">
                    <button  data-modal-target="<%=comment._id %>ReplayModal" data-modal-toggle="<%=comment._id %>ReplayModal"  class="replsy-btn" >
                        <i class="bi bi-reply"></i>
                            Reply</button>
                           
                            
                          
                        </div>
                  <!-- Editmodel -->
                  <form id="replyeditform" action="/video/<%=uplaod._id %>/comments/<%=comment._id %>/edit" data-comment-id="<%=comment._id %>" method="post">
                  <div style="" class="kd w-full justify-end hidden " id="edit<%= comment.user[0]._id%>popup"  >
                    <div class="flex flex-col">

                    <span>Editing to  <b class="text-red-700"> <%=comment.user[0].username %></b></span>
                      <div class="flex items-center px-3 py-2 border rounded-lg bg-gray-50">

                    <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                      <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                        <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 1H2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1Z"/>
                        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                      </svg>
                      <span class="sr-only">Upload image</span>
                    </button>
                   
                    <textarea id="commesnt-<%=comment._id %>" name="comment" rows="1" class="block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" placeholder="Your message..."><%=comment.content%></textarea>
                    <button type="submit" class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                      <svg class="w-5 h-5 rotate-90" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                        <path d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z"/>
                      </svg>
                      <span class="sr-only">Send message</span>
                    </button>
                  </div>
                </div>


                  </div>
                </form>

                  <!-- //end of edit model -->


                  <div style="  justify-content: flex-start;" class="kd justify-end w-full hidden " id="<%=comment._id %>ReplayModal" >
                    <div class="flex w-full flex-col">

                    <span>Replying to <div class="p-2  rounded-md bg-gray-400 w-full flex flex-col <%=comment.user[0].profilecolor%>">
                      <div class="flex items-center ">
                        <img class="w-8 h-8 rounded-full" src="<%= comment.user[0].photourl %>" alt="" srcset="">
                        <b class="text-red-700 ml-1"> <%=comment.user[0].username %></b>
                      
                      </div>
                    
                <form id="replyform" action="/video/<%=uplaod._id %>/comments/<%=comment._id %>/replies/<%=comment.user[0]._id %>" data-comment-id="<%=comment._id %>" method="post">
                      <div class="flex mt-1 items-center px-3 py-2  rounded-lg ">

                
                   
                    <textarea id="chat" name="comment" rows="1" class="block mx-4 p-2.5 w-full text-sm text-gray-900 bg-white rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500" placeholder="Your message..."></textarea>
                    <button type="submit" class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                      <svg class="w-5 h-5 rotate-90" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                        <path d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z"/>
                      </svg>
                      <span class="sr-only">Send message</span>
                    </button>
                  </div>
                </div>

                </form>
              </div> </span>

                  </div>

                </div>
                
              </div>
              
                          </div>
                          
              <% } %>

            </div>

            

          </div>

         
    </div>
  </div>
  
  <div class="reco hidden ">
      <div class="recomandation flex justify-between">
          <span class="text-2xl">Top category </span>
          <button class="border rounded-md hover:bg-gray-600 hover:text-white">View all</button>

      </div>
      <br>
      <div class="flex flex-wrap ">
          <% for(let video of allvideo){ %>
              <% const Timed = Date.now() - video.createdAt;
              let VideoformattedDate = '';
              
              // Calculate the difference in milliseconds
              const minuteInMs = 60 * 1000;
              const hourInMs = 60 * minuteInMs;
              const dayInMs = 24 * hourInMs;
              const weekInMs = 7 * dayInMs;
              
              // Format the date based on the time difference
              if (Timed < minuteInMs) {
                VideoformattedDate = Math.floor(Timed / 1000) + ' seconds ago';
              } else if (Timed < hourInMs) {
                VideoformattedDate = Math.floor(Timed / minuteInMs) + ' minutes ago';
              } else if (Timed < dayInMs) {
                VideoformattedDate = Math.floor(Timed / hourInMs) + ' hours ago';
              } else if (Timed < weekInMs) {
                VideoformattedDate = Math.floor(Timed / dayInMs) + ' days ago';
              } else {
                VideoformattedDate = uplaod.createdAt.toDateString(); // Use the full date if it's more than a week ago
              } %>
              <% if(video.VideoUrl && video.VideoUrl !== ''){ %>
                  <a href="/home/video/<%=video._id %>" class="flex  flex-col ml-3 mb-4 border "  style="    min-width: 17em;
                    min-height: 15em; max-width: 19em; max-height: 17em;" > 
                      <div class="video-container">
                          <%if(video.thumbnail ){ %>
                          <div style="width: 17em; height: 11em;">
                            <img class="rounded-lg" style="   width: 100%; height: auto; " src="<%=video.thumbnail %>" alt="" srcset="">

                          </div>
                        <div class="video-overlay"></div>
                          <% }else{ %>
                            
                              <video class="rounded-md" style="     min-width: 9em;
                              width: 22em; max-width: 9em;" height="350"  controlsList="nodownload noremoteplayback nofullscreen">
                                <% if (video.VideoUrl) { %>
                                  <source src="<%= video.VideoUrl %>" type="video/mp4">
                                  <source src="<%= video.VideoUrl %>" type="video/webm">
                                  <source src="<%= video.VideoUrl %>" type="video/ogg">
                                  Your browser does not support the video tag.
                                <% } %>
                              </video>
                              <% } %>
                      </div>
                      <div class="ml-2" style="    ">
                          <span class="title font-medium">

                          
                          <% let title = video.title.length > 44 ? video.title.substring(0, 41) + '...' : video.title; %>

                          <%= title %>
                      </span>

                          <div class="author">
                              <% if (video.author && video.author.length > 0) { %>
                                   <%= video.author[0].username %>
                                <% } %>
                          </div>
                        <div class="text-gray-600">
                          <i class="bi text-red-700 text-xl bi-eye-fill"></i>
                          <%= video.viewcount %> views <b class="mb-1">.</b><%=VideoformattedDate %>
                        </div>
                      </div>
                    </a>
                    
          <% } %>
              <% } %>
      </div>


  </div>
</div>
<div class="sugest " >

<div class="ml-2 mr-1  ">
  <div class="flex h-6" style="overflow: scroll; width: 100%;">
    <button class="p-1 flex border w  bg-gray-100 items-center h-6 w-full" style="width: 8em;">
        <i class="bi text-sm bi-globe"></i>
        <span class="font-sm text-xs" text-xs="">Trnding</span>
    </button>
   
        <button class="p-1 ml-1 flex border w  bg-gray-100 items-center h-6 w-full" style="width: 8em;">

        <i class="bi text-sm bi-peace-fill"></i>
        <span class="font-sm text-xs ml-2">Sport</span>
    </button>
        <button class="p-1 ml-1 flex border w  bg-gray-100 items-center h-6 w-full" style="width: 8em;">

        <i class="bi text-sm bi-mortarboard-fill"></i>
        <span class="font-sm text-xs ml-2">Education</span>
    </button>
        <button class="p-1 ml-1 flex border w  bg-gray-100 items-center h-6 w-full" style="width: 8em;">

        <i class="bi text-sm bi-handbag-fill"></i>
        <span class="font-sm text-xs ml-2">Fashion</span>
    </button>

        <button class="p-1 ml-1 flex border w  bg-gray-100 items-center h-6 w-full" style="width: 8em;">

        <i class="bi text-sm bi-emoji-smile-fill"></i>
        <span class="font-sm text-xs ml-2">Entertinment</span>
    </button>
</div>
<br>

  <div class="flex flex-wrap ">
    <% for(let video of allvideo){ %>
        <% const Timed = Date.now() - video.createdAt;
        let VideoformattedDate = '';
        
        // Calculate the difference in milliseconds
        const minuteInMs = 60 * 1000;
        const hourInMs = 60 * minuteInMs;
        const dayInMs = 24 * hourInMs;
        const weekInMs = 7 * dayInMs;
        
        // Format the date based on the time difference
        if (Timed < minuteInMs) {
          VideoformattedDate = Math.floor(Timed / 1000) + ' seconds ago';
        } else if (Timed < hourInMs) {
          VideoformattedDate = Math.floor(Timed / minuteInMs) + ' minutes ago';
        } else if (Timed < dayInMs) {
          VideoformattedDate = Math.floor(Timed / hourInMs) + ' hours ago';
        } else if (Timed < weekInMs) {
          VideoformattedDate = Math.floor(Timed / dayInMs) + ' days ago';
        } else {
          VideoformattedDate = uplaod.createdAt.toDateString(); // Use the full date if it's more than a week ago
        } %>
        <% if(video.author[0] && video.VideoUrl && video.VideoUrl !== ''){ %>
          <a href="/home/video/<%=video._id %>" class="flex mb-4">
            <img style="width: 12em;" class=" rounded-xl" src="<%=video.thumbnail%>" alt="" srcset="">
            <div class="ml-1 flex flex-col">
              <span class="text-sm font-semibold"><%=video.title%></span>
              <span class="text-gray-600 text-xs">          <%=video.author[0].username%>              </span>
              <div class="flex text-xs text-gray-600 items-center">
                <span><%=video.viewcount%> views </span> <span>.</span> <span><%=VideoformattedDate %></span>
              </div>
              <div>
                <span class="bg-gray-100 text-gray-800 text-xs font-medium mr-2 px-2.5 py-0.5 text-center items-center rounded ">new</span>
        
              </div>
        
            </div>
          </a>
              
    <% } %>
        <% } %>
</div>
</div>
</div>
</div>
<input id="videoid" class="hidden" type="text" value="<%=uplaod._id %>">
<br><br><br><br>
</div>
<br><br><br><br>
<script>
    const replymsg = document.getElementById('replymsg');
    const replymsgd = document.getElementById('replymsgd');
    const replyButtons = document.querySelectorAll('.reply-btn');
  //   const videoElement = document.getElementById('videoElement');
  // const timestampDisplay = document.getElementById('timestampDisplay');
  // let formatedstamp  = 0;
  // // Update the timestamp display
  // function updateTimestamp() {
  //   const timestamp = videoElement.currentTime;
  //   formatedstamp = formatTimestamp(timestamp);
  //   timestampDisplay.textContent = formatTimestamp(timestamp);
  // }

  // // Format the timestamp value
  // function formatTimestamp(timestamp) {
  //   // Implement your desired timestamp formatting logic here
  //   // Example: Convert seconds to minutes and seconds
  //   const minutes = Math.floor(timestamp / 60);
  //   const seconds = Math.floor(timestamp % 60);
  //   return minutes + ':' + (seconds < 10 ? '0' : '') + seconds;
  // }

  // // Add event listener to update timestamp while playing
  // videoElement.addEventListener('timeupdate', updateTimestamp);

// Handle reply button click
function handleReply(event) {
  const username = event.target.getAttribute('data-username');
  const replyMessage = `Replying to ${username}`;

  // Insert the reply message at the top of the comment input field
  const commentInput = document.getElementById('chat');
  replymsgd.classList.remove('hidden');
    replymsg.innerHTML = replyMessage;
  commentInput.focus();
}

    const videoi = document.getElementById('videoid').value;
    const form = document.getElementById('newcomments');
form.addEventListener('submit', handleCommentSubmission);

function handleCommentSubmission(event) {
  event.preventDefault();

  const formData = new FormData(form);
  const comment = formData.get('comment');
  

  const xhr = new XMLHttpRequest();
  xhr.open('POST', form.action);
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        const response = JSON.parse(xhr.responseText);
        const newComment = response.newComment;
        console.log(response)
        const user = response.user;
        const comment = response.newComment;
        console.log(newComment)
        console.log(newComment)

        // Create the HTML for the new comment
        const commentHTML = `
        <div class="flex items-start w-full mb-2 align-center" id="livecommetn-${newComment._id}-${user._id}">
            <div>
              <div class="like mr-1 bg-gray-200 p-2 rounded" style="position: relative; height: 5em; display: flex; justify-content: center; align-items: center;">
                <div class="flex text-center items-center flex-col">
                  <button id="likebtn${newComment._id}" class="like-commets bi-caret-up" onclick="likeComment('${newComment._id}')"></button>
                  <span class="like-dislike-count" id="${newComment._id}">0</span>
                  <button id="dislikebtn${newComment._id}" class="dislike-commets bi-caret-down" onclick="dislikeComment('${newComment._id}')"></button>
                </div>
              </div>
            </div>
            <div class="comment w-full mb-3 flex">
              <img class="user-img rounded-full bg-blue-200 w-11 h-11 text-center flex justify-center" src="${user.photourl || 'https://yt3.ggpht.com/ytc/AOPolaSHoC37xAqzya3OaA1wyAKEqd9623gkoy6D5oMylA=s88-c-k-c0x00ffffff-no-rj'}" alt="" srcset="">
              </img>
              <div class="comment-text ml-1" style="width: 98%;">
                <div class="flex w-full justify-between">
                  <span class="text-sm">@${user.username} <span class="text-gray-500 text-md">just now</span></span>
                  <button data-modal-target="more${user._id}popup" data-modal-toggle="more${user._id}popup"><i class="bi bi-three-dots ml-2"></i></button>
                </div>
                <span id="comment-${newComment._id}" class="text-gray-700 text-lg">${comment.content}</span><br>
                <div class="flex justify-between w-full" style="width: 100%; margin-left: -2em;">
                <button data-modal-target="${newComment._id}ReplayModal" data-modal-toggle="${newComment._id}ReplayModal" class="replsy-btn"><i class="bi bi-reply"></i> Reply</button>
              </div>
              <form id="${newComment._id}ReplayModal" action="/video/${newComment._id}/comments/${newComment._id}/replies/${newComment._id}" data-comment-id="${newComment._id}" method="post">
                <div style="margin-left: -3em;" class="kd w-full hidden " id="${newComment._id}ReplayModal">
                  <div class="flex flex-col">
                    <span>Replying to  <b class="text-red-700">${user.username}</b></span>
                    <div class="flex items-center px-3 py-2 border rounded-lg bg-gray-50">
                      <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                          <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 1H2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1Z"/>
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                        </svg>
                        <span class="text-sm font-medium">Cancel</span>
                      </button>
                      <button type="submit" class="inline-flex justify-center p-2 ml-2 text-white bg-blue-500 rounded-lg hover:bg-blue-600">
                        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                          <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 1H2a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h16a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1Z"/>
                          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l-2.516-3.71L11 13 7.565 7.423Z"/>
                        </svg>
                        <span class="text-sm font-medium">Reply</span>
                      </button>
                    </div>
                  </div>
                </div>
              </form>
              </div>
            
            </div>
          </div>
        `;

        // Append the new comment to the comments card
        const commentsContainer = document.querySelector('.comments');
        commentsContainer.insertAdjacentHTML('afterbegin', commentHTML);

        // Clear the comment input
        form.reset();
      } else {  
        // Error occurred during comment submission
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send(`comment=${encodeURIComponent(comment)}`);
}

document.querySelectorAll('.likebtn').forEach((btn) => {
  btn.addEventListener('click', handleLike);
  btn.classList.remove('text-gray-500');
});

// Event listener for the dislike button
document.querySelectorAll('.dislikebtn').forEach((btn) => {
  btn.addEventListener('click', handleDislike);
});

// Function to handle the like button click event
function handleLike(event) {
  const videoId = event.target.getAttribute('data-video-id');
  const isLiked = event.target.classList.toggle('liked');
  sendLikeOrDislikeRequest(videoId, 'like');
  updateLocalStorage(videoId, 'liked', isLiked);
}

// Function to handle the dislike button click event
function handleDislike(event) {
  const videoId = event.target.getAttribute('data-video-id');
  const isDisliked = event.target.classList.toggle('disliked');
  sendLikeOrDislikeRequest(videoId, 'dislike');
  updateLocalStorage(videoId, 'disliked', isDisliked);
}
// function updateLocalStorage(videoId, action, value) {
//   const storedVideos = JSON.parse(localStorage.getItem('likedVideos')) || {};
//   if (!storedVideos[videoId]) {
//     storedVideos[videoId] = {};
//   }
//   storedVideos[videoId][action] = value;
//   localStorage.setItem('likedVideos', JSON.stringify(storedVideos));
// }
// // Function to apply the toggle classes based on the stored values
// function applyToggleClasses() {
//   const storedVideos = JSON.parse(localStorage.getItem('likedVideos')) || {};
//   const likeButtons = document.querySelectorAll('.likebtn');
//   const dislikeButtons = document.querySelectorAll('.dislikebtn');

//   likeButtons.forEach((btn) => {
//     const videoId = btn.getAttribute('data-video-id');
//     if (storedVideos[videoId] && storedVideos[videoId].liked) {
//       btn.classList.add('liked');
//     }
//   });

//   dislikeButtons.forEach((btn) => {
//     const videoId = btn.getAttribute('data-video-id');
//     if (storedVideos[videoId] && storedVideos[videoId].disliked) {
//       btn.classList.add('disliked');
//     }
//   });
// }

// // Call the function to apply the toggle classes on page load
// applyToggleClasses();

// Function to send the like or dislike request
function sendLikeOrDislikeRequest(videoId, action) {
  const xhr = new XMLHttpRequest();
  xhr.open('POST', `/home/video/${videoi}/${action}`);
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Request successful
        const Response = JSON.parse(xhr.responseText);
        console.log(Response);

        // You can handle the response here, if needed
        updateReactionCounts(Response.likesCount, Response.dislikesCount);

      } else {
        // Error occurred
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send();
}

function updateReactionCounts(likesCount, dislikesCount) {
  const likeCountElements = document.querySelector('.likes');
  const dislikeCountElements = document.querySelector('.dislikes');

  likeCountElements.innerHTML =  likesCount;

  dislikeCountElements.innerHTML = dislikesCount;
  

    
}


document.querySelectorAll('form#replyform').forEach((form) => {
  form.addEventListener('submit', handleReply);
});

function handleReply(event) {
  event.preventDefault();
  const commentId = event.target.getAttribute('data-comment-id');
  
  console.log('commentid' + commentId);
  const replyModalId = `${commentId}ReplayModal`;
  const replyForm = event.target;
  const replyContent = replyForm.querySelector('textarea[name="comment"]').value;
  console.log('replaymodel' + replyModalId);
  console.log('replyform' + replyForm);
  console.log('replycontent' + replyContent);

  const xhr = new XMLHttpRequest();
  xhr.open('POST', replyForm.action);
  
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Reply added successfully
        const response = JSON.parse(xhr.responseText);
        // const comment = response.comment;
        // const reply = response.reply;

        // Update the UI with the new reply (if needed)

        // Clear the reply form
        replyForm.reset();
      } else {
        // Error occurred while adding the reply
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send(`content=${encodeURIComponent(replyContent)}`);
}


document.querySelectorAll('form#replyeditform').forEach((form) => {
  form.addEventListener('submit', handleReply);
});

function handleReply(event) {
  console.log(event);

  event.preventDefault();
  const commentId = event.target.getAttribute('data-comment-id');
  
  console.log('commentid' + commentId);
  const replyModalId = `${commentId}ReplayModal`;
  const replyForm = event.target;
  const replyContent = replyForm.querySelector('textarea[name="comment"]').value;
  const ReplyModel = document.querySelector(`.replymodel-${commentId}`);
  
  console.log('replaymodel ' + replyModalId);

  const xhr = new XMLHttpRequest();
  xhr.open('POST', replyForm.action);
  console.log(ReplyModel)

  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Reply added successfully
        const response = JSON.parse(xhr.responseText);
        const reply = response.foundcomment;
        function formattedDate(dateString) {
  const commentDate = new Date(dateString);
  const currentDate = new Date();
  const timeDiff = Math.abs(currentDate - commentDate);
  const minutes = Math.floor(timeDiff / (1000 * 60));
  const hours = Math.floor(timeDiff / (1000 * 60 * 60));
  const days = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
  const months = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 30));
  const years = Math.floor(timeDiff / (1000 * 60 * 60 * 24 * 365));

  if (minutes < 60) {
    return minutes + ' minutes ago';
  } else if (hours < 24) {
    return hours + ' hours ago';
  } else if (days < 30) {
    return days + ' days ago';
  } else if (months < 12) {
    return months + ' months ago';
  } else {
    return years + ' years ago';
  }
}
       
        const changedcommet = document.querySelector(`#comment-${commentId}`);
        console.log(response)
          const formattedDate1 = formattedDate(response.reply.createdAt);

        ReplyModel.classList.remove('hidden');
        const replycontent = `
    <div class="flex mb-1 " id="livereply-${response.reply._id}-${response.reply.user._id}">
        <div class="like mr-1 bg-gray-200 p-1 rounded" style="height: 3.3em;">
            <div class="flex text-center items-center flex-col" style="font-size: 0.5em;">
                <button id="likebtn${response.reply._id}" class="like-reply bi-caret-up" onclick="likeReply('${response.comment._id}', '${response.reply._id}')"></button>
                <span class="avrage" id="${response.reply._id}">0</span>
                <button id="dislikebtn${response.reply._id}" class="dislike-reply bi-caret-down" onclick="dislikeReply('${response.comment._id}', '${response.reply._id}')"></button>
            </div>
        </div>
        <div class="p-2 rereply w-full">
            <div class="flex justify-between w-full">
                <div class="flex">
                    <img class="user-img rounded-full w-7 h-7" src="${response.user.photourl}" alt="" srcset="">
                    <span class="ml-1 text-sm">@${response.user.username} <span class="text-gray-500 text-xs">${response.reply.createdAt}</span></span>
                </div>
                <span>  
                    <button data-modal-target="re-more${response.reply.content}popup" data-modal-toggle="re-more${response.reply.content}popup"><i class="bi bi-three-dots ml-2"></i></button>            
                </span>
                <div class="" style="width: 55%; margin-top: 1em; position: absolute; display: flex; justify-content: flex-end;">
                    <div id="re-more${response.reply.content}popup" class="z-10 hidden absolute bg-white divide-y divide-gray-100 rounded-lg shadow w-16">
                        <ul class="py-2 text-sm text-gray-700 " aria-labelledby="dropdownDelayButton">
                            <li>
                                <button data-modal-hide="re-more${response.reply.content}popup" data-modal-target="re-reply${response.reply.content}edit" data-modal-toggle="re-reply${response.reply.content}edit" class="block px-4 py-2 hover:bg-gray-100 ">Edit</button>
                            </li>
                            <li>
                                <button href="#" data-modal-hide="re-more${response.user._id}popup" onclick="Deletereply('${response.upload._id}','${response.comment._id}' ,'${response.reply._id}' ,'${response.reply.user._id}')" class="block px-4 py-2 hover:bg-gray-100 ">Delete</button>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div>
                ${response.reply.targetuser ? `<span class=" text-white text-xs p-1 rounded border-0 bg-blue-900">${response.reply.targetuser.username}</span>` : ''} <span id="repyied-${response.reply._id}">${response.reply.content}</span> 
            </div>
            <div class="reply-reply">
                <button data-modal-target="${response.reply._id}ReplayreplyModal" data-modal-toggle="${response.reply._id}ReplayreplyModal" class="replsy-btn text-xs">Reply</button>
                <div style="margin-left: -3em;" class="kd w-full hidden " id="re-reply${response.reply.content}edit">
                    <div class="flex flex-col">
                        <span> Editing to  <b class="text-red-700"> ${response.reply.user.username}</b></span>
                        <form id="re-replyeditform" action="/video/${response.upload._id}/comments/${response.comment._id}/replies/${response.reply._id}/edit" data-comment-id="${response.reply._id}" method="post">
                            <div class="flex items-center  p-1 border rounded-lg bg-gray-50">
                                <button type="button" class="inline-flex justify-center p-2 text-gray-500 rounded-lg cursor-pointer hover:text-gray-900 hover:bg-gray-100">
                                    <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                                        <path fill="currentColor" d="M13 5.5a.5.5 0 1 1-1 0 .5.5 0 0 1 1 0ZM7.565 7.423 4.5 14h11.518l1.172-5.194L13.08 7.424a.5.5 0 0 0-.614-.159l-2.901 1.6a.5.5 0 0 0-.24.525.514.514 0 0 0 .084.295l2.928 4.87 2.928-4.87a.513.513 0 0 0 .084-.295.5.5 0 0 0-.24-.525l-2.902-1.6a.5.5 0 0 0-.614.159Z"></path>
                                    </svg>
                                </button>
                                <input type="text" class="text-sm p-1 outline-none w-full" name="replycontent" value="${response.reply.content}">
                                <button type="submit" class="inline-flex justify-center p-2 text-blue-900 bg-blue-100 rounded-lg cursor-pointer hover:text-blue-100 hover:bg-blue-900 ml-1">
                                    <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 18">
                                        <path fill="currentColor" d="M7.48 14.77a.993.993 0 0 0 1.41 0L17.46 6.2a.993.993 0 0 0 0-1.41L16.2 4.2a.993.993 0 0 0-1.41 0l-7.07 7.07L3.65 7.65a.993.993 0 0 0-1.41 0L1.22 8.2a.993.993 0 0 0 0 1.41L6.34 14.77a.993.993 0 0 0 1.41 0Z"></path>
                                    </svg>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
`;


ReplyModel.insertAdjacentHTML('afterbegin', replycontent);
        // Update the UI with the new reply (if needed)



        const editPopup = document.querySelector(`#edit${response.foundcomment.user[0]}popup`);
    editPopup.classList.toggle('hidden');


        // Clear the reply form
        replyForm.reset();
      } else {
        // Error occurred while adding the reply
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send(`content=${encodeURIComponent(replyContent)}`);
}

function Deletecommets(videoId, action,useid) {
  console.log(videoId + 'action' + action)
  const livecommetn = document.querySelector(`#livecommetn-${action}-${useid}`);
  const xhr = new XMLHttpRequest();
  xhr.open('POST', `/video/${videoId}/comments/${action}/delete`);
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Request successful
        const Response = JSON.parse(xhr.responseText);
        console.log(Response);
        livecommetn.classList.toggle('hidden');
        // You can handle the response here, if needed

      } else {
        // Error occurred
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send();
}


document.querySelectorAll('form#re-replyeditform').forEach((form) => {
  form.addEventListener('submit', handleReply1);
});

function handleReply1(event) {

  event.preventDefault();
  const commentId = event.target.getAttribute('data-comment-id');
  
  console.log('commentid' + commentId);
  const replyModalId = `${commentId}ReplayModal`;
  const replyForm = event.target;
  const replyContent = replyForm.querySelector('textarea[name="comment"]').value;
  console.log('replaymodel' + replyModalId);
  console.log('replyform' + replyForm);
  console.log('replycontent' + replyContent);

  const xhr = new XMLHttpRequest();
  xhr.open('POST', replyForm.action);
  
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Reply added successfully
        const response = JSON.parse(xhr.responseText);
        const reply = response.foundcomment;
        const changedcommet = document.querySelector(`#repyied-${commentId}`);
        changedcommet.innerHTML = replyContent;
        // Update the UI with the new reply (if needed)
        const editPopup = document.querySelector(`#re-reply${response.reply.user[0]._id}edit`);
    editPopup.classList.toggle('hidden');


        // Clear the reply form
        replyForm.reset();
      } else {
        // Error occurred while adding the reply
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send(`content=${encodeURIComponent(replyContent)}`);
}

function Deletereply(videoId, action,reply,useid) {
  console.log(videoId + 'action' + action)
  const livecommetn = document.querySelector(`#livereply-${reply}-${useid}`);
  const xhr = new XMLHttpRequest();
  xhr.open('POST', `/video/${videoId}/comments/${action}/replies/${reply}/delete`);
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
  xhr.onreadystatechange = function () {
    if (xhr.readyState === XMLHttpRequest.DONE) {
      if (xhr.status === 200) {
        // Request successful
        const Response = JSON.parse(xhr.responseText);
        console.log(livecommetn);
        livecommetn.classList.toggle('hidden');
        // You can handle the response here, if needed

      } else {
        // Error occurred
        // You can handle the error here, if needed
      }
    }
  };
  xhr.send();
}

const playPauseBtn = document.querySelector(".play-pause-btn")
const theaterBtn = document.querySelector(".theater-btn")
const fullScreenBtn = document.querySelector(".full-screen-btn")
const miniPlayerBtn = document.querySelector(".mini-player-btn")
const muteBtn = document.querySelector(".mute-btn")
const captionsBtn = document.querySelector(".captions-btn")
const speedBtn = document.querySelector(".speed-btn")
const currentTimeElem = document.querySelector(".current-time")
const totalTimeElem = document.querySelector(".total-time")
const previewImg = document.querySelector(".preview-img")
const thumbnailImg = document.querySelector(".thumbnail-img")
const volumeSlider = document.querySelector(".volume-slider")
const videoContainer = document.querySelector(".video-container")
const timelineContainer = document.querySelector(".timeline-container")
const video = document.querySelector(".karivideo")
console.log('ok')
document.addEventListener("keydown", e => {
  const tagName = document.activeElement.tagName.toLowerCase()

  if (tagName === "input") return

  switch (e.key.toLowerCase()) {
    case " ":
      if (tagName === "button") return
    case "k":
      togglePlay()
      break
    case "f":
      toggleFullScreenMode()
      break
    case "t":
      toggleTheaterMode()
      break
    case "i":
      toggleMiniPlayerMode()
      break
    case "m":
      toggleMute()
      break
    case "arrowleft":
    case "j":
      skip(-5)
      break
    case "arrowright":
    case "l":
      skip(5)
      break
    case "c":
      toggleCaptions()
      break
  }
})

// Timeline
timelineContainer.addEventListener("mousemove", handleTimelineUpdate)
timelineContainer.addEventListener("mousedown", toggleScrubbing)
document.addEventListener("mouseup", e => {
  if (isScrubbing) toggleScrubbing(e)
})
document.addEventListener("mousemove", e => {
  if (isScrubbing) handleTimelineUpdate(e)
})

let isScrubbing = false
let wasPaused
function toggleScrubbing(e) {
  const rect = timelineContainer.getBoundingClientRect()
  const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width
  isScrubbing = (e.buttons & 1) === 1
  videoContainer.classList.toggle("scrubbing", isScrubbing)
  if (isScrubbing) {
    wasPaused = video.paused
    video.pause()
  } else {
    video.currentTime = percent * video.duration
    if (!wasPaused) video.play()
  }

  handleTimelineUpdate(e)
}

function handleTimelineUpdate(e) {
  const rect = timelineContainer.getBoundingClientRect()
  const percent = Math.min(Math.max(0, e.x - rect.x), rect.width) / rect.width
  const previewImgNumber = Math.max(
    1,
    Math.floor((percent * video.duration) / 10)
  )
  const previewImgSrc = `assets/previewImgs/preview${previewImgNumber}.jpg`
  previewImg.src = previewImgSrc
  timelineContainer.style.setProperty("--preview-position", percent)

  if (isScrubbing) {
    e.preventDefault()
    thumbnailImg.src = previewImgSrc
    timelineContainer.style.setProperty("--progress-position", percent)
  }
}

// Playback Speed
speedBtn.addEventListener("click", changePlaybackSpeed)

function changePlaybackSpeed() {
  let newPlaybackRate = video.playbackRate + 0.25
  if (newPlaybackRate > 2) newPlaybackRate = 0.25
  video.playbackRate = newPlaybackRate
  speedBtn.textContent = `${newPlaybackRate}x`
}

// Captions
const captions = video.textTracks[0]
captions.mode = "hidden"

captionsBtn.addEventListener("click", toggleCaptions)

function toggleCaptions() {
  const isHidden = captions.mode === "hidden"
  captions.mode = isHidden ? "showing" : "hidden"
  videoContainer.classList.toggle("captions", isHidden)
}

// Duration
video.addEventListener("loadeddata", () => {
  totalTimeElem.textContent = formatDuration(video.duration)
})

video.addEventListener("timeupdate", () => {
  currentTimeElem.textContent = formatDuration(video.currentTime)
  const percent = video.currentTime / video.duration
  timelineContainer.style.setProperty("--progress-position", percent)
})

const leadingZeroFormatter = new Intl.NumberFormat(undefined, {
  minimumIntegerDigits: 2,
})
function formatDuration(time) {
  const seconds = Math.floor(time % 60)
  const minutes = Math.floor(time / 60) % 60
  const hours = Math.floor(time / 3600)
  if (hours === 0) {
    return `${minutes}:${leadingZeroFormatter.format(seconds)}`
  } else {
    return `${hours}:${leadingZeroFormatter.format(
      minutes
    )}:${leadingZeroFormatter.format(seconds)}`
  }
}

function skip(duration) {
  video.currentTime += duration
}

// Volume
muteBtn.addEventListener("click", toggleMute)
volumeSlider.addEventListener("input", e => {
  video.volume = e.target.value
  video.muted = e.target.value === 0
})

function toggleMute() {
  video.muted = !video.muted
}

video.addEventListener("volumechange", () => {
  volumeSlider.value = video.volume
  let volumeLevel
  if (video.muted || video.volume === 0) {
    volumeSlider.value = 0
    volumeLevel = "muted"
  } else if (video.volume >= 0.5) {
    volumeLevel = "high"
  } else {
    volumeLevel = "low"
  }

  videoContainer.dataset.volumeLevel = volumeLevel
})

// View Modes
theaterBtn.addEventListener("click", toggleTheaterMode)
fullScreenBtn.addEventListener("click", toggleFullScreenMode)
miniPlayerBtn.addEventListener("click", toggleMiniPlayerMode)

function toggleTheaterMode() {
  const reco2  = document.querySelector('.reco2');
  const videow = document.querySelector('.videow');
  videow.classList.toggle('fullwidth');
  reco2.classList.toggle('theathorfull');
  videoContainer.classList.toggle("theater")
}

function toggleFullScreenMode() {
  if (document.fullscreenElement == null) {
    videoContainer.requestFullscreen()
  } else {
    document.exitFullscreen()
  }
}

function toggleMiniPlayerMode() {
  if (videoContainer.classList.contains("mini-player")) {
    document.exitPictureInPicture()
  } else {
    video.requestPictureInPicture()
  }
}

document.addEventListener("fullscreenchange", () => {
  videoContainer.classList.toggle("full-screen", document.fullscreenElement)
})

video.addEventListener("enterpictureinpicture", () => {
  videoContainer.classList.add("mini-player")
})

video.addEventListener("leavepictureinpicture", () => {
  videoContainer.classList.remove("mini-player")
})

// Play/Pause
playPauseBtn.addEventListener("click", togglePlay)
video.addEventListener("click", togglePlay)

function togglePlay() {
  video.paused ? video.play() : video.pause()
}

video.addEventListener("play", () => {
  videoContainer.classList.remove("paused")
})

video.addEventListener("pause", () => {
  videoContainer.classList.add("paused")
})
console.log('ok')


</script>